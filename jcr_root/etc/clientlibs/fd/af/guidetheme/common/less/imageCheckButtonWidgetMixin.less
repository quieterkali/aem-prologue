/*************************************************************************
 *
 * ADOBE CONFIDENTIAL
 * __________________
 *
 *  Copyright 2014 Adobe Systems Incorporated
 *  All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Adobe Systems Incorporated and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Adobe Systems Incorporated and its
 * suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Adobe Systems Incorporated.
 **************************************************************************/

/** Guide Image Check Button Widget Specific Mixins **/
.checkButtonStyle(@n,
            @backgroundPosUnitX,
            @backgroundPosUnitY,
            @backgroundPosCheckedUnitX,
            @backgroundPosCheckedUnitY) when (@n > 0) {
  .guideRadioButtonItem:nth-of-type(@n),
  .guideCheckBoxItem:nth-of-type(@n) {
    background-position-x: -(@n - 1)*@backgroundPosUnitX;
    background-position-y: -(@n - 1)*@backgroundPosUnitY;
    &.imageCheckButtonChecked {
      background-position-x: @backgroundPosCheckedUnitX;
      background-position-y: @backgroundPosCheckedUnitY;
    }
  }
  .checkButtonStyle((@n - 1),
              @backgroundPosUnitX,
              @backgroundPosUnitY,
              @backgroundPosCheckedUnitX,
              @backgroundPosCheckedUnitY);
}

.checkButtonStyle(@n, @img) when (@n > 0) {
  .guideRadioButtonItem:nth-of-type(@n),
  .guideCheckBoxItem:nth-of-type(@n) {
    background-image: url("@{img}_@{n}");
    &.imageCheckButtonChecked {
      background-image: url("@{img}_@{n}_checked");
    }
  }
  .checkButtonStyle((@n - 1), @img);
}

.chooseImageCheckButton(@n,
                  @img,
                  @sprite,
				  @backgroundPosUnitX,
                  @backgroundPosUnitY,
                  @backgroundPosCheckedUnitX,
                  @backgroundPosCheckedUnitY) when (@sprite = true) {
  .guideRadioButtonItem,
  .guideCheckBoxItem {
    background-image: url("@{img}");
  }
  .checkButtonStyle(@n,
              @backgroundPosUnitX,
              @backgroundPosUnitY,
              @backgroundPosCheckedUnitX,
              @backgroundPosCheckedUnitY);
}

.chooseImageCheckButton(@n,
                  @img,
                  @sprite) when (@sprite = false) {
  .checkButtonStyle(@n, @img);
}

.generateImageCheckButton(@n,
                    @img,
                    @sprite: true,
                    @height: @imageCheckButtonHeight,
                    @width: @imageCheckButtonWidth,
                    @backgroundColor: @imageCheckButtonBackgroundColor,
                    @backgroundCheckedColor: @imageCheckButtonBackgroundCheckedColor,
                    @backgroundPosUnitX: @imageCheckButtonBackgroundPosUnitX,
                    @backgroundPosUnitY: @imageCheckButtonBackgroundPosUnitY,
                    @backgroundPosCheckedUnitX: @imageCheckButtonBackgroundPosCheckedUnitX,
                    @backgroundPosCheckedUnitY: @imageCheckButtonBackgroundPosCheckedUnitY) {
  .guideRadioButtonItem,
  .guideCheckBoxItem {
    width: @width;
    height: @height;
    background-color: @backgroundColor;
    &.imageCheckButtonChecked {
      background-color: @backgroundCheckedColor;
    }
  }

  .chooseImageCheckButton(@n,
                    @img,
                    @sprite,
                    @backgroundPosUnitX,
                    @backgroundPosUnitY,
                    @backgroundPosCheckedUnitX,
                    @backgroundPosCheckedUnitY);
  .chooseImageCheckButton(@n,
                    @img,
                    @sprite);
}
